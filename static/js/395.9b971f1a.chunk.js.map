{"version":3,"file":"static/js/395.9b971f1a.chunk.js","mappings":"iLACA,EAA+B,wC,SCmB/B,MAhBA,YAAkD,IAArBA,EAAoB,EAApBA,iBACzB,OACI,eAAGC,UAAWC,EAAd,gCAEI,kBAFJ,mBAGqBF,EAHrB,MAII,kBAJJ,uBAQP,C,kECbD,GAAgB,UAAY,6BAA6B,KAAO,yB,iBCgChE,MA5BA,YAAoC,IAAfG,EAAc,EAAdA,WACXC,GAAWC,EAAAA,EAAAA,MACXC,EAA6B,MAAtBF,EAASG,SAAmB,UAAY,GACrD,OACI,eAAIN,UAAWC,EAAAA,UAAf,SACKC,EAAWK,KAAI,SAAAC,GACZ,OACI,eAAmBR,UAAWC,EAAAA,cAA9B,UACI,SAAC,KAAD,CACID,UAAWC,EAAAA,KAGXQ,GAAE,UAAKJ,GAAL,OAAYG,EAAME,IACpBC,MAAO,CAAEC,KAAMT,GALnB,SAOKK,EAAMK,SARNL,EAAME,GAYtB,KAGZ,C,yFC1BD,GAAgB,MAAQ,qB,kCCKT,SAASI,IACpB,OAA4CC,EAAAA,EAAAA,UAAS,IAArD,eAAOC,EAAP,KAAuBC,EAAvB,KACA,GAA4BF,EAAAA,EAAAA,UAAS,MAArC,eAAOG,EAAP,KAAeC,EAAf,KACA,GAAgDJ,EAAAA,EAAAA,UAAS,IAAzD,eAAOhB,EAAP,KAAyBqB,EAAzB,KAmBA,OAFAC,EAAAA,EAAAA,YAfyB,WACrBC,EAAAA,EAAAA,cAEKC,MAAK,SAAAC,GACF,IAAKA,EAASC,GACV,MAAM,IAAIC,MAAMF,EAASN,QAE7B,OAAOM,EAASG,MACnB,IACAJ,MAAK,SAAAK,GAAI,OAAIX,EAAkBW,EAAKC,QAA3B,IACTC,OAAM,SAAAC,GACHX,EAAoBW,EAAMC,SAC1Bb,EAAU,QACb,GACR,GAC2B,KAGxB,qBAASnB,UAAWC,EAAAA,KAApB,WACI,eAAID,UAAWC,EAAAA,MAAf,4BACY,OAAXiB,IAAmB,SAACe,EAAA,EAAD,CAAW/B,WAAYc,IAC/B,UAAXE,IACG,SAACgB,EAAA,EAAD,CAAmBnC,iBAAkBA,MAIpD,C,mBCrCD,IAAMuB,EAAkB,CACpBa,QAAS,gCACTC,QAAS,mCACTC,aAAc,GACdC,WAAY,EAEZC,iBANoB,WAOhB,OAAO,IAAIC,gBAAgB,CACvBC,QAASC,KAAKN,QACdO,MAAOD,KAAKL,aACZO,KAAMF,KAAKJ,YAElB,EAEDO,cAdoB,WAehB,OAAO,IAAIL,gBAAgB,CACvBC,QAASC,KAAKN,SAErB,EAEDU,YApBoB,WAoB2C,IAAnDC,EAAkD,uDAAjC,QAASC,EAAwB,uDAAP,MAC7CC,EAAgB,WACtB,OAAOC,MAAM,GAAD,OAEJR,KAAKP,SAFD,OAGLc,EAHK,YAGYF,EAHZ,YAG8BC,EAH9B,YAGgDN,KAAKG,iBAEpE,EAEDM,aA7BoB,SA6BPzC,GAET,OAAOwC,MAAM,GAAD,OAAIR,KAAKP,SAAT,OADI,QACJ,YAA8BzB,EAA9B,YAAoCgC,KAAKG,iBACxD,EAEDO,eAlCoB,SAkCL1C,GAGX,OAAOwC,MAAM,GAAD,OAEJR,KAAKP,SAFD,OAFI,QAEJ,YAGMzB,EAHN,YADM,UACN,YAGyBgC,KAAKG,iBAE7C,EAEDQ,kBA5CoB,SA4CFC,GACdZ,KAAKL,aAAeiB,EAEpB,OAAOJ,MAAM,GAAD,OAAIR,KAAKP,SAAT,OADI,eACJ,YAA8BO,KAAKH,oBAClD,EAEDgB,QAlDoB,SAkDZ7C,GAGJ,OAAOwC,MAAM,GAAD,OAEJR,KAAKP,SAFD,OAFI,QAEJ,YAGMzB,EAHN,YADM,UACN,YAGyBgC,KAAKG,iBAE7C,GAGL,K","sources":["webpack://goit-react-hw-05-movies/./src/components/ErrorMessageBlock/ErrorMessageBlock.module.scss?8171","components/ErrorMessageBlock/ErrorMessageBlock.jsx","webpack://goit-react-hw-05-movies/./src/components/MovieList/MovieList.module.scss?f9f6","components/MovieList/MovieList.jsx","webpack://goit-react-hw-05-movies/./src/pages/Home/Home.module.scss?ce6f","pages/Home/Home.jsx","services/searchService.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"errorMessage\":\"ErrorMessageBlock_errorMessage__rcMMp\"};","import React from 'react';\r\nimport propTypes from 'prop-types';\r\nimport css from './ErrorMessageBlock.module.scss';\r\n\r\nfunction ErrorMessageBlock({ errorDescription }) {\r\n    return (\r\n        <p className={css.errorMessage}>\r\n            An error occurred!\r\n            <br />\r\n            Type of error: '{errorDescription}'.\r\n            <br />\r\n            Try again later...\r\n        </p>\r\n    );\r\n}\r\n\r\nErrorMessageBlock.propTypes = {\r\n    errorDescription: propTypes.string.isRequired,\r\n};\r\n\r\nexport default ErrorMessageBlock;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"movieList\":\"MovieList_movieList__pH29x\",\"Link\":\"MovieList_Link__jGEDg\"};","import propTypes from 'prop-types';\r\nimport { useLocation } from 'react-router-dom';\r\nimport css from './MovieList.module.scss';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction MovieList({ moviesList }) {\r\n    const location = useLocation();\r\n    const path = location.pathname === '/' ? 'movies/' : '';\r\n    return (\r\n        <ul className={css.movieList}>\r\n            {moviesList.map(movie => {\r\n                return (\r\n                    <li key={movie.id} className={css.movieListItem}>\r\n                        <Link\r\n                            className={css.Link}\r\n                            // to={`/movies/${movie.id}`}\r\n                            // to={`/movies/${movie.id}`}\r\n                            to={`${path}${movie.id}`}\r\n                            state={{ from: location }}\r\n                        >\r\n                            {movie.title}\r\n                        </Link>\r\n                    </li>\r\n                );\r\n            })}\r\n        </ul>\r\n    );\r\n}\r\n\r\nMovieList.propTypes = {\r\n    moviesList: propTypes.arrayOf(propTypes.object).isRequired,\r\n};\r\n\r\nexport default MovieList;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"Home_title__1aNQh\"};","import { useState, useEffect } from 'react';\r\nimport css from './Home.module.scss';\r\nimport movieServiceApi from '../../services/searchService.js';\r\nimport MovieList from '../../components/MovieList/MovieList.jsx';\r\nimport ErrorMessageBlock from '../../components/ErrorMessageBlock/ErrorMessageBlock.jsx';\r\n\r\nexport default function Home() {\r\n    const [trendingsToday, setTrandingsToday] = useState([]);\r\n    const [status, setStatus] = useState('ok');\r\n    const [errorDescription, setErrorDescription] = useState('');\r\n\r\n    const getTrendingToday = () => {\r\n        movieServiceApi\r\n            .getTrending()\r\n            .then(response => {\r\n                if (!response.ok) {\r\n                    throw new Error(response.status);\r\n                }\r\n                return response.json();\r\n            })\r\n            .then(data => setTrandingsToday(data.results))\r\n            .catch(error => {\r\n                setErrorDescription(error.message);\r\n                setStatus('error');\r\n            });\r\n    };\r\n    useEffect(getTrendingToday, []);\r\n\r\n    return (\r\n        <section className={css.home}>\r\n            <h1 className={css.title}>Trending today</h1>\r\n            {status === 'ok' && <MovieList moviesList={trendingsToday} />}\r\n            {status === 'error' && (\r\n                <ErrorMessageBlock errorDescription={errorDescription} />\r\n            )}\r\n        </section>\r\n    );\r\n}\r\n","const movieServiceApi = {\r\n    baseUrl: 'https://api.themoviedb.org/3/',\r\n    userKey: 'a3cb0cf762fe02df8fbdba8f47fbe85b',\r\n    currentQuery: '',\r\n    pageNumber: 1,\r\n\r\n    makeSearchParams() {\r\n        return new URLSearchParams({\r\n            api_key: this.userKey,\r\n            query: this.currentQuery,\r\n            page: this.pageNumber,\r\n        });\r\n    },\r\n\r\n    makeUrlParams() {\r\n        return new URLSearchParams({\r\n            api_key: this.userKey,\r\n        });\r\n    },\r\n\r\n    getTrending(typeOfTrending = 'movie', trendingPeriod = 'day') {\r\n        const typeOfService = 'trending';\r\n        return fetch(\r\n            `${\r\n                this.baseUrl\r\n            }${typeOfService}/${typeOfTrending}/${trendingPeriod}?${this.makeUrlParams()}`\r\n        );\r\n    },\r\n\r\n    getMovieById(id) {\r\n        const urlPart = 'movie';\r\n        return fetch(`${this.baseUrl}${urlPart}/${id}?${this.makeUrlParams()}`);\r\n    },\r\n\r\n    getReviewsById(id) {\r\n        const urlPart = 'movie';\r\n        const urlSuffix = 'reviews';\r\n        return fetch(\r\n            `${\r\n                this.baseUrl\r\n            }${urlPart}/${id}/${urlSuffix}?${this.makeUrlParams()}`\r\n        );\r\n    },\r\n\r\n    getSearchedMovies(value) {\r\n        this.currentQuery = value;\r\n        const urlPart = 'search/movie';\r\n        return fetch(`${this.baseUrl}${urlPart}?${this.makeSearchParams()}`);\r\n    },\r\n\r\n    getCast(id) {\r\n        const urlPart = 'movie';\r\n        const urlSuffix = 'credits';\r\n        return fetch(\r\n            `${\r\n                this.baseUrl\r\n            }${urlPart}/${id}/${urlSuffix}?${this.makeUrlParams()}`\r\n        );\r\n    },\r\n};\r\n\r\nexport default movieServiceApi;\r\n"],"names":["errorDescription","className","css","moviesList","location","useLocation","path","pathname","map","movie","to","id","state","from","title","Home","useState","trendingsToday","setTrandingsToday","status","setStatus","setErrorDescription","useEffect","movieServiceApi","then","response","ok","Error","json","data","results","catch","error","message","MovieList","ErrorMessageBlock","baseUrl","userKey","currentQuery","pageNumber","makeSearchParams","URLSearchParams","api_key","this","query","page","makeUrlParams","getTrending","typeOfTrending","trendingPeriod","typeOfService","fetch","getMovieById","getReviewsById","getSearchedMovies","value","getCast"],"sourceRoot":""}